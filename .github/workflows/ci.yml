name: Test suite

on:
  push:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]

jobs:
  lints:
    name: project lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install rabbitmq-server -y --fix-missing
          sudo systemctl start rabbitmq-server

      - name: general sanity checks
        run: |
          make lint

  build-server:
    name: build-server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install rabbitmq-server -y --fix-missing
          sudo systemctl start rabbitmq-server

      - name: build the server
        run: |
          make build-server

  build-client:
    name: build-client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install rabbitmq-server -y --fix-missing
          sudo systemctl start rabbitmq-server

      - name: build the client
        run: |
          make build-client

  build:
    name: build
    # Run this job after the linter, so the cache is hot
    needs: [build-client, build-server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install rabbitmq-server -y --fix-missing
          sudo systemctl start rabbitmq-server

      - name: build
        run: |
          make build

  unit_tests:
    name: unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install rabbitmq-server -y --fix-missing
          sudo systemctl start rabbitmq-server

      - name: Check tests
        run: |
          make test

  full_run_1DeCada:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Ensure Docker Compose
        run: docker compose version

      - name: Run full local script
        run: |
          make generate-config CONFIG=1DeCada
          bash scripts/run_all_and_test_ci.sh

  full_run_MuchosSinEstado:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Ensure Docker Compose
        run: docker compose version

      - name: Run full local script
        run: |
          make generate-config CONFIG=MuchosSinEstado
          bash scripts/run_all_and_test_ci.sh

  full_run_MuchosSinEstadoMultiplesClientes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Ensure Docker Compose
        run: docker compose version

      - name: Run full local script
        run: |
          make generate-config CONFIG=MuchosSinEstadoMultiplesClientes
          bash scripts/run_all_and_test_ci.sh

  full_run_1DeCadaMultiplesClientes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Ensure Docker Compose
        run: docker compose version

      - name: Run full local script
        run: |
          make generate-config CONFIG=1DeCadaMultiplesClientes
          bash scripts/run_all_and_test_ci.sh
